/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\ntry {\r\n  const moreInfoBlock = document.querySelector(\".more-info p\");\r\n  const moreInfoLink = document.querySelector(\".more-info a\");\r\n  moreInfoLink.addEventListener(\"click\", () => {\r\n    moreInfoBlock.classList.toggle(\"open\");\r\n  });\r\n} catch (e) {\r\n  Error;\r\n}\r\nconst body = document.querySelector(\"body\");\r\nconst burger = document.querySelector(\".header__body-burg\");\r\nburger.addEventListener(\"click\", () => {\r\n  body.classList.toggle(\"active\");\r\n  body.classList.toggle(\"lock\");\r\n  burger.classList.toggle(\"active\");\r\n});\r\ndocument.addEventListener(\"keydown\", function (e) {\r\n  if (e.keyCode == 27) {\r\n    body.classList.remove(\"active\");\r\n    body.classList.remove(\"lock\");\r\n    burger.classList.remove(\"active\");\r\n  }\r\n});\r\ntry {\r\n  const navBtns = document.querySelectorAll('.scroll-link a[href*=\"#\"]');\r\n\r\n  navBtns.forEach((btn) => {\r\n    btn.addEventListener(\"click\", function (e) {\r\n      body.classList.remove(\"active\");\r\n      body.classList.remove(\"lock\");\r\n      burger.classList.remove(\"active\");\r\n      let btnId = \"#\" + this.getAttribute(\"href\").split(\"#\")[1];\r\n      if (document.getElementById(btnId.replace(\"#\", \"\"))) {\r\n        e.preventDefault();\r\n        document.querySelector(btnId).scrollIntoView({\r\n          block: \"start\",\r\n          behavior: \"smooth\",\r\n        });\r\n      }\r\n    });\r\n  });\r\n} catch (e) {\r\n  Error;\r\n}\r\n\n\n//# sourceURL=webpack://gulp/./src/js/app.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/app.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;